{"version":3,"sources":["About/assets/jorgeprofile.jpg","About/assets/kevinprofile.jpg","About/assets/mitulprofile.jpg","About/assets/gordonprofile.jpg","About/assets/jackprofile.jpg","About/jorge.js","About/kevin.js","About/mitul.js","About/gordon.js","About/lionel.js","About/jack.js","About/about.js","Home/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Jorge","style","paddingTop","className","src","profileImage","Kevin","Mitul","Gordon","Lionel","Jack","About","match","useRouteMatch","to","url","path","Home","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,6MCqB5BC,EAjBD,WACV,OACI,yBAAKC,MAAO,CAAEC,WAAY,SACtB,yBAAKC,UAAU,WACX,yBAAKA,UAAU,iBACXC,IAAKC,MAET,gDACA,6BACA,4CACA,0DAEJ,yBAAKF,UAAU,QAAf,+L,iBCWGG,EAvBD,WACV,OACI,yBAAKL,MAAO,CAAEC,WAAY,SACtB,yBAAKC,UAAU,WACX,yBAAKA,UAAU,iBACXC,IAAKC,MAET,2CACA,6BACA,iDACA,sDAEJ,yBAAKF,UAAU,QACX,4BACI,uDACA,gGACf,uE,iBCCUI,EAjBD,WACV,OACI,yBAAKN,MAAO,CAAEC,WAAY,SACtB,yBAAKC,UAAU,WACX,yBAAKA,UAAU,iBACXC,IAAKC,MAET,4CACA,6BACA,6CACA,sDAEJ,yBAAKF,UAAU,QAAf,8J,iBCaGK,EAzBA,WACX,OACI,yBAAKP,MAAO,CAAEC,WAAY,SACtB,yBAAKC,UAAU,WACX,yBAAKA,UAAU,iBACXC,IAAKC,MAET,0CACA,6BACA,gDACA,oDAEJ,yBAAKF,UAAU,QACX,4BACI,sFACA,qEACA,mEACA,gFCFLM,EAfA,WACX,OACI,yBAAKR,MAAO,CAAEC,WAAY,SACtB,yBAAKC,UAAU,WACX,2CACA,6BACA,6CACA,qDAEJ,yBAAKA,UAAU,QAAf,yM,iBCQGO,EAjBF,WACT,OACI,yBAAKT,MAAO,CAAEC,WAAY,SACtB,yBAAKC,UAAU,WACX,yBAAKA,UAAU,iBACXC,IAAKC,MAET,0CACA,6BACA,kDACA,qDAEJ,yBAAKF,UAAU,QAAf,qHC6DGQ,EA7DD,WACV,IAAIC,EAAQC,cAEZ,OACI,6BACI,kBAAC,IAAD,KACI,6BACI,6BACI,wBAAIV,UAAU,eACV,4BACI,kBAAC,IAAD,CAAMW,GAAE,UAAKF,EAAMG,IAAX,WAAR,UAEJ,4BACI,kBAAC,IAAD,CAAMD,GAAE,UAAKF,EAAMG,IAAX,YAAR,WAEJ,4BACI,kBAAC,IAAD,CAAMD,GAAE,UAAKF,EAAMG,IAAX,WAAR,UAEJ,4BACI,kBAAC,IAAD,CAAMD,GAAE,UAAKF,EAAMG,IAAX,YAAR,WAEJ,4BACI,kBAAC,IAAD,CAAMD,GAAE,UAAKF,EAAMG,IAAX,WAAR,UAEJ,4BACI,kBAAC,IAAD,CAAMD,GAAE,UAAKF,EAAMG,IAAX,UAAR,WAOZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAI,UAAKJ,EAAMG,IAAX,WACP,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,KAAI,UAAKJ,EAAMG,IAAX,WACP,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,KAAI,UAAKJ,EAAMG,IAAX,WACP,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,KAAI,UAAKJ,EAAMG,IAAX,YACP,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,KAAI,UAAKJ,EAAMG,IAAX,YACP,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,KAAI,UAAKJ,EAAMG,IAAX,UACP,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,KAAK,KACR,kBAAC,EAAD,YCxDbC,EAVF,WACT,OACI,yBAAKhB,MAAO,CAAEC,WAAY,SACtB,wCACA,6BACA,mDCqCGgB,MAhCf,WACE,OACE,yBAAKf,UAAU,OACX,kBAAC,IAAD,CAAQA,UAAU,cAChB,6BACE,6BACE,wBAAIA,UAAU,UACZ,4BACE,kBAAC,IAAD,CAAMW,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,YAON,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,YCvBIG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASV,MACvB,2DCZNW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e2d913d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jorgeprofile.78c06ee5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kevinprofile.672ae24a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mitulprofile.ec49d530.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gordonprofile.479900b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jackprofile.0adb8dfa.jpg\";","import React from 'react';\nimport './about.css';\nimport profileImage from './assets/jorgeprofile.jpg';\n\nconst Jorge = () => {\n    return (\n        <div style={{ paddingTop: \"40px\" }}>\n            <div className='profile'>\n                <img className='profilepicture'\n                    src={profileImage}\n                ></img>\n                <h2>Jorge Landaverde</h2>\n                <br></br>\n                <h3>Backend Lead</h3>\n                <h3>jlandaverde@mail.sfsu.edu</h3>\n            </div>\n            <div className='desc'>My name is Jorge Landaverde and I'm a senior persuing my bachelor's degree in Computer Science. I am excited about finishing my degree and also looking forward to having a great product</div>\n        </div>\n    );\n};\n\nexport default Jorge;","import React from 'react';\nimport './about.css';\nimport profileImage from './assets/kevinprofile.jpg';\n\nconst Kevin = () => {\n    return (\n        <div style={{ paddingTop: \"40px\" }}>\n            <div className='profile'>\n                <img className='profilepicture'\n                    src={profileImage}\n                ></img>\n                <h2>Kevin Huang</h2>\n                <br></br>\n                <h3>Frontend engineer</h3>\n                <h3>khuang2@mail.sfsu.edu</h3>\n            </div>\n            <div className='desc'>\n                <ul>\n                    <li>My name is Kevin Huang.</li>\n                    <li>I am a computer science major at San Francisco State University.</li>\n\t\t\t\t\t<li>My favorite food are cheeseburgers.</li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Kevin;","import React from 'react';\nimport './about.css';\nimport profileImage from './assets/mitulprofile.jpg';\n\nconst Mitul = () => {\n    return (\n        <div style={{ paddingTop: \"40px\" }}>\n            <div className='profile'>\n                <img className='profilepicture'\n                    src={profileImage}\n                ></img>\n                <h2>Mitul Savani</h2>\n                <br></br>\n                <h3>Github Master</h3>\n                <h3>msavani@mail.sfsu.edu</h3>\n            </div>\n            <div className='desc'>My name is Mitul Savani and I am graduating senior majoring in Computer Science. I am excited to build this project and help my teammates along the way.</div>\n        </div>\n    );\n};\n\nexport default Mitul;","import React from 'react';\nimport './about.css';\nimport profileImage from './assets/gordonprofile.jpg';\n\nconst Gordon = () => {\n    return (\n        <div style={{ paddingTop: \"40px\" }}>\n            <div className='profile'>\n                <img className='profilepicture'\n                    src={profileImage}\n                ></img>\n                <h2>Gordon Lam</h2>\n                <br></br>\n                <h3>Backend Engineer</h3>\n                <h3>glam1@mail.sfsu.edu</h3>\n            </div>\n            <div className='desc'>\n                <ul>\n                    <li>Currently a student at San Francisco State University.</li>\n                    <li>Was born and raised in San Francisco.</li>\n                    <li>Hobbies include fishing and gaming.</li>\n                    <li>Princess Bride is one of my favorite movies.</li>\n                </ul>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Gordon;","import React from 'react';\nimport './about.css';\n\n\nconst Lionel = () => {\n    return (\n        <div style={{ paddingTop: \"40px\" }}>\n            <div className='profile'>\n                <h2>Lionel Wong</h2>\n                <br></br>\n                <h3>Frontend Lead</h3>\n                <h3>lwong7@mail.sfsu.edu</h3>\n            </div>\n            <div className='desc'>Hey everyone! I’m Lionel Wong and am currently a senior in computer science.\n                I’m looking forward to working together with you guys in this class. PS have a passion for Initial D Arcade.</div>\n        </div>\n    );\n};\n\nexport default Lionel;","import React from 'react';\nimport './about.css';\nimport profileImage from './assets/jackprofile.jpg';\n\nconst Jack = () => {\n    return (\n        <div style={{ paddingTop: \"40px\" }}>\n            <div className='profile'>\n                <img className='profilepicture'\n                    src={profileImage}\n                ></img>\n                <h2>Jack Kower</h2>\n                <br></br>\n                <h3>Software Developer</h3>\n                <h3>jkower@mail.sfsu.edu</h3>\n            </div>\n            <div className='desc'>My name is Jack Kower and I am a graduating senior. I love learning about tech and am excited for this project.</div>\n        </div>\n    );\n};\n\nexport default Jack;","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch\n} from \"react-router-dom\";\nimport './about.css';\nimport Jorge from './jorge';\nimport Kevin from './kevin';\nimport Mitul from './mitul';\nimport Gordon from './gordon';\nimport Lionel from './lionel';\nimport Jack from './jack'\n\nconst About = () => {\n    let match = useRouteMatch();\n\n    return (\n        <div>\n            <Router >\n                <div>\n                    <nav>\n                        <ul className=\"aboutnavbar\">\n                            <li>\n                                <Link to={`${match.url}/jorge`}>Jorge</Link>\n                            </li>\n                            <li>\n                                <Link to={`${match.url}/lionel`}>Lionel</Link>\n                            </li>\n                            <li>\n                                <Link to={`${match.url}/mitul`}>Mitul</Link>\n                            </li>\n                            <li>\n                                <Link to={`${match.url}/gordon`}>Gordon</Link>\n                            </li>\n                            <li>\n                                <Link to={`${match.url}/kevin`}>Kevin</Link>\n                            </li>\n                            <li>\n                                <Link to={`${match.url}/jack`}>Jack</Link>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    {/* A <Switch> looks through its children <Route>s and\n             renders the first one that matches the current URL. */}\n                    <Switch>\n                        <Route path={`${match.url}/jorge`}>\n                            <Jorge/>\n                        </Route>\n                        <Route path={`${match.url}/kevin`}>\n                            <Kevin/>\n                        </Route>\n                        <Route path={`${match.url}/mitul`}>\n                            <Mitul/>\n                        </Route>\n                        <Route path={`${match.url}/lionel`}>\n                            <Lionel/>\n                        </Route>\n                        <Route path={`${match.url}/gordon`}>\n                            <Gordon/>\n                        </Route>\n                        <Route path={`${match.url}/jack`}>\n                            <Jack/>\n                        </Route>\n                        <Route path=\"/\">\n                            <Jorge />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div style={{ paddingTop: \"40px\" }}>\n            <h1>UniGator</h1>\n            <br></br>\n            <h3>Connecting, .... </h3>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport About from './About/about';\nimport Home from './Home/home'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router className=\"App-header\">\n          <div>\n            <nav>\n              <ul className=\"navbar\">\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                  <Link to=\"/about\">About</Link>\n                </li>\n              </ul>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n             renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/about\">\n                <About/>\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}